<?php
// Your code here!
/**
 * undocumented class
 *
 * @package default
 * @author `g:snips_author`
 */
interface Shape
{
    // public function draw();
    // public function move($x,$y);
    public function accept($shape);
    
}


interface Visitor{
    public function visitDot(Dot $visitor);
    public function visitCircle(Circle $visitor);
}

class XMLExportVisitor implements Visitor{
    public function visitDot(Dot $dot){
        return $dot;
    }
    
    public function visitCircle(Circle $circle){
        return $circle;
    }
}


class Dot implements Shape{
    public $name= 'dot';
    public function accept($visitorExport){
       return $visitorExport->visitDot($this);
    }
    
}
class Circle implements Shape{
    public $name='circle';
    public function accept($visitorExport){
        return $visitorExport->visitCircle($this);
    }
    
}

class Application {
    public $array = array();

    public function __construct(){
      $this->array= [new Dot(),new Circle()];
    }
    public function exports(){
        $xmlVisitor = new XMLExportVisitor();
        
        foreach ($this->array as $shape){
          echo $shape->accept($xmlVisitor)->name;
        }
        
    }
}

$app = new Application();


$shapes = $app->exports();

?>
