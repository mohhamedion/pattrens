/* Factory and car interfaces */

interface CarFactory
{
    public function makeCar(): Car;
}

interface Car
{
    public function getType(): string;
}

/* Concrete implementations of the factory and car */

class SedanFactory implements CarFactory
{
    public function makeCar(): Car
    {
        return new Sedan();
    }
}

class Sedan implements Car
{
    public function getType(): string
    {
        return 'Sedan';
    }
}

/* Client */

$factory = new SedanFactory();
$car = $factory->makeCar();
print $car->getType();




-----------


<?php
// interfaces
interface CardFactory{
    public function createCard();
}

interface Card {
    public function getNumber();
    public function generatNumber();
}


/////////

class CardFactoryForForginers implements CardFactory{

    public function createCard(){
        return new ForginersCard();
    }
    
}

class ForginersCard  implements Card{
    public $number;
    function __construct(){
        $this->generatNumber();
    }
    public function getNumber(){
        return $this->number;
    }
    public function generatNumber(){
        $this->number = rand(111111111,10000000);
    }
}



$factory  = new CardFactoryForForginers();
$card = $factory->createCard();

echo $card->getNumber();

?>

